# DFS . . .

int n;

 bool dfs(vector<int>adj[], int curr,  vector<int>&color, int curr_color){
        
        color[curr]=curr_color;
        
        for(int &v : adj[curr]){

        if(color[v]==color[curr]) return false;
            
            else if(color[v]==-1){
                
                int send_color=1-curr_color;

            if(dfs(adj,v,color,send_color)==false){
                return false;
            }
            }
        }
        
        return true;
    }
    

	bool isBipartite(int V, vector<int>adj[]){
	    // Code here
	    n=V;
	    
	     
        vector<int>color(n,-1);
        for(int i=0;i<n;i++){
            if(color[i]==-1){
                if(dfs(adj,i,color,1)==false){
                    return false;
                }
            }
        }
        
        return true;
	}