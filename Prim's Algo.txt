	typedef pair<int,int>P;
	
    int spanningTree(int V, vector<vector<int>> adj[])
    {
        // code here
        vector<bool>inMST(V,false);
        priority_queue<P,vector<P>,greater<P>>pq;
        pq.push({0,0});
        int sum=0;
        while(!pq.empty()){
            auto p=pq.top();
            pq.pop();
            
            int wt=p.first;
            int node=p.second;
            
            if(inMST[node]) continue;
            
            inMST[node]=true;
            sum+=wt;
            for(auto &temp: adj[node]){
                int neighbor=temp[0];
                int neighbor_wt=temp[1];
                
                if(!inMST[neighbor]) pq.push({neighbor_wt,neighbor});
            }
        }
        
        return sum;
    }